plugins {
    id "pl.allegro.tech.build.axion-release" version "1.19.0"
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.8.8"
    id "co.uzzu.dotenv.gradle" version "4.0.0"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // Loom automatically adds repositories for Minecraft and its libraries.
    // These are only for third-party mods.
    maven { url = uri('https://maven.wispforest.io') }
    maven { url = uri('https://maven.terraformersmc.com/') }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        roadarchitect {
            sourceSet(sourceSets.main)
            sourceSet(sourceSets.client)
        }
    }
}

fabricApi {
    configureDataGeneration {
        client = true
    }
}

dependencies {

    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    annotationProcessor "io.wispforest:owo-lib:${project.owo_version}"
    include "io.wispforest:owo-sentinel:${project.owo_version}"

    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
    modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.junit_version}"
}

processResources {
    inputs.property('version', project.version)
    filesMatching('fabric.mod.json') {
        expand version: inputs.properties.version
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = 21
    // Suppress warnings from Gradle's TimeTrackingProcessor which only supports up to Java 17
    options.compilerArgs += ['-Xlint:-processing', '-nowarn']
}

// Гарантируем сборку перед загрузкой на Modrinth
tasks.named("modrinth").configure {
    dependsOn tasks.named("build")
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    inputs.property('archivesName', project.base.archivesName)

    from('LICENSE') {
        rename { "${it}_${inputs.properties.archivesName}" }
    }
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        create('mavenJava', MavenPublication) {
            artifactId = project.archives_base_name
            from(components.java)
        }
    }

    repositories {
        // Configure your publishing repo here
    }
}

// ---- Modrinth ----
modrinth {
    def tokenFromDotenv = env.isPresent("MODRINTH_TOKEN") ? env.fetch("MODRINTH_TOKEN") : null
    def tokenFromSystem = System.getenv("MODRINTH_TOKEN")
    def resolvedToken = tokenFromDotenv ?: tokenFromSystem

    if (!resolvedToken) {
        throw new GradleException(
                "Не найден MODRINTH_TOKEN. Укажите его в .env (MODRINTH_TOKEN=...) " +
                        "или как переменную окружения."
        )
    }

    token = resolvedToken
    projectId = "dLRvLyY3"
    versionName = "RoadArchitect v${version}"
    versionNumber = version
    uploadFile = remapJar
    gameVersions = ["1.21.4"]
    loaders = ["fabric"]
}
